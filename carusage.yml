openapi: 3.0.0
info:
  description: This API describes cars' usage
  version: "1.0.0-oas3"
  title: Car Usage API
  contact:
    email: daveapplicliente@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: events
    description: events generated by using the car
paths:
  /events:
    get:
      tags:
        - events
      summary: searches cars' usage events
      description: >
        By passing in the appropriate options (carId, date, lat, lng), you can
        search for available events related to the cars' usage. 
      operationId: searchEvents
      parameters:
        - name: carId
          in: query
          description: pass an optional carID to look for events linked to the carId
          required: false
          schema:
            type: string
            format: uuid
        - name: date
          in: query
          description: pass an optional date to look for events at this date
          required: false
          schema:
            type: string
            format: date-time
        - name: lat
          in: query
          description: pass a latitude to look for events at this location
          required: false
          schema:
            type: number
            format: float
        - name: lng
          in: query
          description: pass a longitude to look for events at this location
          required: false
          schema:
            type: number
            format: float
        - name: skip
          in: query
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: limit
          in: query
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      security:
        - api_key: []
      responses:
        '200':
          description: list of events matching with the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
        '400':
          description: bad or missing input parameter.
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: Not Found  The requested resource doesn’t exist.
        '412':
          description: precondition failed
        '500':
          description: technical error
  '/events/{carId}':
    post:
      tags:
        - events
      summary: create cars' usage event
      description: Cars send events that are created via this API
      operationId: createEvents
      parameters:
        - name: carId
          in: path
          description: pass the carID to create the event linked to the carId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: send an Events object in json format
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/event'
      security:
        - api_key: []
      responses:
        '200':
          description: event has been created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
        '400':
          description: bad or missing input parameter.
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: Not Found  The requested resource doesn’t exist.
        '412':
          description: precondition failed
        '500':
          description: technical error
servers:
  - url: 'https://virtserver.swaggerhub.com/August1/carusage/1.0.0'
components:
  schemas:
    event:
      type: object
      required:
        - carId
        - date
        - eventId
        - gazCons
        - lat
        - lng
        - speed
      properties:
        eventId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          description: Each event is identified with an Id.
        carId:
          type: string
          format: uuid
          example: b234d8ff-5a53-1b98-34d7-d345789d1243
          description: The car identification is unique for each car.
        date:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
          description: The date of the event.
        lat:
          type: number
          format: float
          example: 48.841408
          description: The latitude of the car's position.
        lng:
          type: number
          format: float
          example: 2.2200828
          description: The longitude of the car's position.
        speed:
          type: number
          format: float
          example: 37
          description: The speed of the car in km/h.
        gazCons:
          type: number
          format: float
          example: 3.7
          description: The real time car's gaz consumption in l/100km.
      example:
        date: '2016-08-29T09:12:33.001Z'
        eventId: d290f1ee-6c54-4b01-90e6-d701748f0851
        lng: 2.2200828
        lat: 48.841408
        speed: 37
        gazCons: 3.7
        carId: b234d8ff-5a53-1b98-34d7-d345789d1243
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header